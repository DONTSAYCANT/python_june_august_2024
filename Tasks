================= June 8 ===========

What is print (in detail)
function
inbuilt function
5 inbuilt function print,len, type, 
interpreter / compiler
python 3.12 speciality 
keywords in python (10)
operators Arithmetic / Assignment
Understand rules for creating variable
PEP and camelCase

================ June 9 =============== 

Introduction notebook ==> complete it and understand


===============June 15 ========================

1. 12 pgms data type conversion (int, float , str, bool)
2. why input function only accepts string
3. inbuilt function ===> https://www.w3schools.com/python/python_ref_functions.asp (Min 10 pgms)
4. Complete introduction notebook pending pgms


================= June 16 =======================

"I_love_india"
"python_compiler_interpreter"
"w3schools_program_assignment"
"idle_python_four"

print(a[3:8])
print(a[5:-5])
print(a[-12:-7])
print(a[-10:12])
print(a[:6])
print(a[:-7])
print(a[5:])
print(a[-10:])
print(a[:])
print(a[4:100])
print(a[12:5])


https://www.w3schools.com/python/python_strings_exercises.asp


Data type conversion (int to float,bool,string)

For below programs collect input from user, pi is constant value 3.14 (print output in formatted way)

write a program to calculate perimeter of the circle with radius (collect from user) ===> 2*pi*r
Collect radius and height from user,
calculate Area of cone (area of cone = 0.33 * pi * r * r * h) (int)


Type1: var = "python_interpreter_made_easy"

print(var[1:3])
print(var[0:5])
print(var[-5:-2])
print(var[:3])
print(var[3:])
print(var[:])
print(val[3:10])
print(val[2:5])
print(val[0:10])
print(val[5:-5])
print(val[2:8])
print(val[:8])
print(val[5:])
print(val[8:12])
print(val[12:5])



=========================== June 18 ============================

"go_kubernetes_laptop"
"stop_share_screen"

Type2
print(val[3:10:1])
print(val[3:10:2])
print(val[3:10:3])
print(val[5:-5:1])
print(val[5:-5:2])
print(val[5:-5:5])
print(val[:8:4])
print(val[5::3])
print(val[::2])
print(val[12:5:3])


Type 1
print(a[3:8])
print(a[5:-5])
print(a[-12:-7])
print(a[-10:15])
print(a[:6])
print(a[:-7])
print(a[5:])
print(a[-10:])
print(a[:])
print(a[4:100])
print(a[12:5])


var = "python_interpreter"

print(var[1:3])
print(var[0:5])
print(var[-5:-2])
print(var[:3])
print(var[3:])
print(var[:])
print(val[3:10])
print(val[2:5])
print(val[0:10])
print(val[5:-5])
print(val[2:8])
print(val[:8])
print(val[5:])
print(val[8:12])
print(val[12:5])


String: "information_Technology"


print(val[3:10])
print(val[2:5])
print(val[0:10])
print(val[5:-5])
print(val[2:8])
print(val[:8])
print(val[5:])
print(val[8:12])
print(val[:])
print(val[12:5])

print(val[3:10:1])
print(val[3:10:2])
print(val[3:10:3])
print(val[5:-5:1])
print(val[5:-5:2])
print(val[5:-5:5])
print(val[:8:4])
print(val[5::3])
print(val[::2])
print(val[12:5:3])

"computer science"

print(a[-10:10:3])
print(a[-5:-1:1])
print(a[-8:-2:10])
print(a[5::3])
print(a[:5:2])
print(a[10:14:2])
print(a[-10:-3:3])
print(a[5:12:5])
print(a[3:-3:3])
print(a[-5:-3:20])

"Information_technology"


print(a[-10:10:3])
print(a[-5:-1:1])
print(a[-8:-2:10])
print(a[5::3])
print(a[:5:2])
print(a[10:14:2])
print(a[-10:-3:3])
print(a[5:12:5])
print(a[3:-3:3])
print(a[-5:-3:20])


"Google_chrome_browser"


print(a[-10:10:3])
print(a[-5:-1:1])
print(a[-8:-2:10])
print(a[5::3])
print(a[:5:2])
print(a[10:14:2])
print(a[-10:-3:3])
print(a[5:12:5])
print(a[3:-3:3])
print(a[-5:-3:20])


print(a[::1])
print(a[::2])
print(a[::3])
print(a[::-1])
print(a[::-2])
print(a[::-3])


print(a[6::3])
print(a[6::-3])
print(a[:8:3])
print(a[:8:-3])
print(a[2::5])
print(a[10::-5])
print(a[:6:1])
print(a[:7:-2])

================== June 24 =================

String methods ===>  20 pgsm
Understands List, tuple, set and dictionary from w3school (Pre study)

=================== June 29 ================


Task1:

Get one string from user
identify the middle character of the string


Task2:


string1: ***python***
string1: **python********
string: ********java*******


output: python  (strip,rstrip,lstrip method *)


Task3: (name<space>float)

collect three strings from user  name<space>float

string1: "ravi 10.30"  
string2: "meghala 12.19"
string3: "Gokul 20.20"

split + indexing

10.30 + 12.19 + 20.20 ===> output ===> round (42.69000) 5 decimal places should be (format)


Task4:

#collect two strings from user

string1: python
String2: java

output ===> jythonpava64hv

string1: maths
string2: science

output ===> sathsmcience57te

Task5:

Collect two strings from user

string1: wikipedia
string2: typescript

output: p  +  c   ===> ascii value of p + ascii value of c  ====>  198
(ord , chr)


Task6:

collect one string from user:

string: computer
output: c6r

string: mathematics
output: m9s


Task7

Say hello world with python


Task 8

swapcase

Task9

what;s your name


Task10:

Mutation




identify 5 difference between list/tuple/set/dictionary


============= Important ============
List

#Create an empty list (two ways)
#Concatenate with [5,6,7,8]
#add 8,9,1,5,6,7,8,1 elements to that list
#Find frequency of 8 (count)
#find the mean of the list
#find sum (List) + min + Max 
#Find median of the list
#remove duplicates from list and give output in the format of tuple

Study: https://www.w3schools.com/python/python_ref_list.asp

Tuple

#Create two tuples (1,4,5,6,7,8) (5,6,7,8,9)
#Find the common elements between two tuples
#Concatenate both tuples and remove duplicates from tuple
#Find the index value of 9 (after concatenation)
#multiply above elements 3 times

 Sets

#Create two empty sets
#update set1 with 7,8,9,1,2,3,4,5,0
#update set2 with 4,5,6,0
#check whether set2 is subset of set1 or no ?
#check whether both have common elements are no ?
#remove 8 from set 1 and set 2 ==> find the inferences
#discard 0 from set1 and set2 
#find collection of both sets ===> set1 and set2

Dictionary:

#create a dictionary
#{1:["english","maths","science"], 2:[10,20,30], 3:["bio-botany","bio-zoology","Algebra"]}
#Extract "bobtn" from above dictionary
#Extract "arbeg" from above dictionary
#print all keys in dictionary and convert it into tuple
#Find the average of all numbers available under key "2"


Task1:

Li1 = [2,3,4,5,[45,56,67,78,[111,222,333,[5555,3333,[10000,50000,"python","computer"],1111,7777,8888],444,555,666,777],89,23,34]]


5
56
222
50000
put
5555
7777
666
89
on
333
3333

Task2


a = [1,2,3,4,[100,101,102,"Computer_science"],200,203]

Extract
#science
#computer

Task3
a = [1,2,3,4,[101,102,103,[201,202,[999]], 666, 777]]

Extract
#666
#201
#102
#999
#777


Task4:

Li1 = [2,3,"python","hello",4,5,0]  

Extract
#ll
#thon

Task5
Li1 = [1,2,3,4,5,[11,22,33,44,55,[111,222,333,444],6666,7777],7777]

Output Prediction 

print(Li1[5][0])
print(Li1[5][6])
print(Li1[5][-2])
print(Li1[5][7])
print(Li1[6])
print(Li1[5][5][1])

print(Li1[-2][-1])


print(Li1[-2][2:4])


Task6:

a = {1: [1,2,3,"python"], 2:{10:"hello",20:"welcome",40: "science"}, 99: {3,4,5,6}, 40:{1:"zoology", 2:"Botany"}}


#py
#ello
#en
#zoo
#Bot



print(a)

Task7:

Covert below two lists in to a dictionary

[1,2,3,4,5]
["python","cpp","c","java","php"]


Task8:

Convert below set in to a list

{5,4,3,6,2,7,1}

Task9:

Remove duplicates from below list

[5,4,3,6,2,7,1,2,3,4,1,2,3,4,5,6,5]


Task10:

Convert below one to tuple

[5,4,3,6,2,7,1,2,3,4,1,2,3,4,5,6,5]

Pre study:

https://www.w3schools.com/python/python_conditions.asp
https://www.w3schools.com/python/python_while_loops.asp
https://www.w3schools.com/python/python_for_loops.asp
https://www.w3schools.com/python/python_ref_functions.asp



Tasks:

12 pgms with functions
Understand inbuilt functions
Understand recursive functions
Geeksforgeeks: 50 pgms: https://www.geeksforgeeks.org/python-programming-examples/





